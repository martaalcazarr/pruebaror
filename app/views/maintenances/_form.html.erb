
<%= form_with(model: @maintenance) do |form| %>
  <% if @maintenance.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(@maintenance.errors.count, "error") %> prohibited this maintenance from being saved:</h2>

      <ul>
        <% @maintenance.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div id="part1">
    <h3>Parte 1: Seleccione el tipo de motor y mantenimiento</h3>

    <div>
      <%= form.label :equipment_type_id, "Elija el tipo de motor:", style: "display: block" %>
      <%= form.collection_select :equipment_type_id, EquipmentType.all, :id, :name, { prompt: 'Seleccione un tipo de equipo' }, { id: 'equipment-type-select' } %>
    </div>

    
  </div>

  <div id="part2" style="display: none;">
    <h3>Parte 2: Complete los detalles</h3>

    <div>
      <%= form.label :motor_id, "Elija el nombre del motor:", style: "display: block" %>
      <%= form.select :motor_id, {}, { prompt: 'Seleccione un motor' }, { id: 'motor-select' } %>
    </div>

    <div>
      <%= form.label :maintenance_type_id, "Elija el tipo de mantenimiento:", style: "display: block" %>
      <%= form.collection_select :maintenance_type_id, MaintenanceType.all, :id, :name, { prompt: 'Seleccione un tipo de mantenimiento' }, { id: 'maintenance-type-select' } %>
    </div>

    <!-- Ejemplo: Date -->
    <div>
      <%= form.label :date, "Fecha:", style: "display: block" %>
      <%= form.date_field :date %>
    </div>
<div>
  <%= form.label :city_id, "Elija la ciudad:", style: "display: block" %>
  <%= form.collection_select :city_id, City.all, :id, :name, { prompt: 'Seleccione una ciudad' }, { id: 'city-select' } %>
</div>
    <!-- Ejemplo: Email -->
    <div>
      <%= form.label :email, "Correo Electrónico del Técnico:", style: "display: block" %>
      <%= form.text_field :email %>
    </div>

    <!-- Otros campos según la selección -->

    <%= form.submit %>
  </div>
</div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const equipmentTypeSelect = document.getElementById('equipment-type-select');
    const motorSelect = document.getElementById('motor-select');
    const part2 = document.getElementById('part2');

    // Define un objeto que mapea el tipo de equipo a los motores disponibles
    const equipmentTypeToMotors = {
      1: <%= raw @motors_for_equipment_type_1.to_json %>,
      2: <%= raw @motors_for_equipment_type_2.to_json %>,
    };

    // Función para actualizar las opciones del campo de selección de motores
    function updateMotorOptions() {
      const selectedEquipmentType = equipmentTypeSelect.value;
      const motors = equipmentTypeToMotors[selectedEquipmentType] || [];
      const motorSelectOptions = motorSelect.options;

      // Elimina las opciones anteriores
      while (motorSelectOptions.length > 0) {
        motorSelectOptions.remove(0);
      }

      // Agrega las nuevas opciones
      motors.forEach(function(motor) {
        const option = new Option(motor.name, motor.id);
        motorSelect.appendChild(option);
      });

      // Mostrar u ocultar la parte 2 según la selección del tipo de equipo
      if (selectedEquipmentType !== "") {
        part2.style.display = "block";
      } else {
        part2.style.display = "none";
      }
    }

    // Escucha los cambios en el campo de selección de tipo de equipo
    equipmentTypeSelect.addEventListener('change', updateMotorOptions);

    // Llama a la función inicialmente para configurar las opciones iniciales
    updateMotorOptions();
  });
</script>